@startuml SequenceDiagram
participant "Spark Driver" as Master
collections "Spark Workers" as Workers
database "Shared Cache" as Cache
queue "Streaming Broker" as Broker
Master -> Broker : poll new feature records
Broker --> Master : return new feature records
Master -> Master : parallelize new feature records
Master -> Workers : buffer new feature records per context
Workers -> Cache : buffer new feature records per context
Master -> Workers : purge old feature records per context
Workers -> Cache : purge old feature records per context
Master -> Workers : load feature records per context
Workers -> Cache : load feature records per context
Cache --> Workers : return feature records per context
Workers --> Master : return a handle on feature records per context
Master -> Workers : compute LOF of feature records per context\nrank by LOF desc and pick top N outliers per context
Workers --> Master : return top N outliers per context
Master -> Broker : send top N outliers per context
Master -> Workers : delete top N outliers per context
Workers -> Cache : delete top N outliers per context
@enduml